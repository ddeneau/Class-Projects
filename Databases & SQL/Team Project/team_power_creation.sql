-- MySQL Script generated by MySQL Workbench
-- Thu Aug 12 10:50:03 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema project_test
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema project_test
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `project_test` ;
USE `project_test` ;

-- -----------------------------------------------------
-- Table `project_test`.`states`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_test`.`states` ;

CREATE TABLE IF NOT EXISTS `project_test`.`states` (
  `state_id` INT UNSIGNED NOT NULL,
  `state_name` VARCHAR(45) NULL,
  `state_code` VARCHAR(45) NULL,
  PRIMARY KEY (`state_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project_test`.`locations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_test`.`locations` ;

CREATE TABLE IF NOT EXISTS `project_test`.`locations` (
  `location_id` INT UNSIGNED NOT NULL,
  `location_name` VARCHAR(100) NULL,
  `location_address` VARCHAR(45) NULL,
  `location_city` VARCHAR(45) NULL,
  `location_state` VARCHAR(2) NULL,
  `location_phone` VARCHAR(20) NULL,
  PRIMARY KEY (`location_id`),
  CONSTRAINT `fk_locations_states`
    FOREIGN KEY (`location_id`)
    REFERENCES `project_test`.`states` (`state_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project_test`.`trails`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_test`.`trails` ;

CREATE TABLE IF NOT EXISTS `project_test`.`trails` (
  `trail_id` INT UNSIGNED NOT NULL,
  `trail_name` VARCHAR(100) NULL,
  `trail_distance` VARCHAR(50) NULL,
  `operation_hours` VARCHAR(45) NULL,
  PRIMARY KEY (`trail_id`),
  CONSTRAINT `fk_trails_locations`
    FOREIGN KEY (`trail_id`)
    REFERENCES `project_test`.`locations` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project_test`.`ameities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_test`.`ameities` ;

CREATE TABLE IF NOT EXISTS `project_test`.`ameities` (
  `amenity_id` INT UNSIGNED NOT NULL,
  `amenity_type` VARCHAR(45) NULL,
  `amenity_description` VARCHAR(250) NULL,
  `amenity_hours` VARCHAR(20) NULL,
  PRIMARY KEY (`amenity_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project_test`.`entrances`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_test`.`entrances` ;

CREATE TABLE IF NOT EXISTS `project_test`.`entrances` (
  `entrance_id` INT UNSIGNED NOT NULL,
  `entrance_description` VARCHAR(45) GENERATED ALWAYS AS (),
  `exit_description` VARCHAR(45) NULL,
  `parking_address` VARCHAR(100) NULL,
  PRIMARY KEY (`entrance_id`),
  CONSTRAINT `fk_entrances_trails`
    FOREIGN KEY (`entrance_id`)
    REFERENCES `project_test`.`trails` (`trail_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project_test`.`visitors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_test`.`visitors` ;

CREATE TABLE IF NOT EXISTS `project_test`.`visitors` (
  `vistor_id` INT UNSIGNED NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `phone_number` VARCHAR(45) NULL,
  `email_address` VARCHAR(45) NULL,
  PRIMARY KEY (`vistor_id`),
  CONSTRAINT `fk_visitors_locations`
    FOREIGN KEY (`vistor_id`)
    REFERENCES `project_test`.`locations` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project_test`.`parking_records`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_test`.`parking_records` ;

CREATE TABLE IF NOT EXISTS `project_test`.`parking_records` (
  `parking_record_id` INT UNSIGNED NOT NULL,
  `vehicle_description` VARCHAR(45) NULL,
  `entrance_time` DATETIME NULL,
  `exit_time` DATETIME NULL,
  PRIMARY KEY (`parking_record_id`),
  CONSTRAINT `fk_parking_records_entrances`
    FOREIGN KEY (`parking_record_id`)
    REFERENCES `project_test`.`entrances` (`entrance_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_parking_records_visitors`
    FOREIGN KEY (`parking_record_id`)
    REFERENCES `project_test`.`visitors` (`vistor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project_test`.`locations_ameities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_test`.`locations_ameities` ;

CREATE TABLE IF NOT EXISTS `project_test`.`locations_ameities` (
  `locations_location_id` INT UNSIGNED NOT NULL,
  `ameities_amenity_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`locations_location_id`, `ameities_amenity_id`),
  INDEX `fk_locations_has_ameities_ameities1_idx` (`ameities_amenity_id` ASC) VISIBLE,
  INDEX `fk_locations_has_ameities_locations1_idx` (`locations_location_id` ASC) VISIBLE,
  CONSTRAINT `fk_locations_has_ameities_locations1`
    FOREIGN KEY (`locations_location_id`)
    REFERENCES `project_test`.`locations` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_locations_has_ameities_ameities1`
    FOREIGN KEY (`ameities_amenity_id`)
    REFERENCES `project_test`.`ameities` (`amenity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
